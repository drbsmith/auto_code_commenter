"""! @file

# Module Profiler

TODO_DOC

## Dependencies
	* sys, os
	* util.log
	* python_code.CodeBlock
	* python_code.CodeLine

## Functions
	* ProfileModule
	* ProfileToLines

## Profile
	* number of lines: 51
	* number of characters: 796
	* number of functions: 2

[generated by Auto Code Commenter at 2022-03-16 15:10:22. https://github.com/drbsmith/auto_code_commenter]
@package src """


import sys, os

from util.log import setup_logging
logger = setup_logging('header_generator.py')


from python_code.CodeBlock import CodeBlock
from python_code.CodeLine import CodeLine

def ProfileModule(codeblock):
	"""!
	Build a textual profile for a module.
	
	@param codeblock: code for the module to generate a profile for
	@return (dict) the module profile
	
	## Profile
	* line count: 11
	* characters: 238
	* returns: profile
	"""
	
	profile = {}
	
	profile['number of lines'] = codeblock.getTotalLines()
	profile['number of characters'] = codeblock.getTotalBytes()
	
	profile['number of functions'] = len(codeblock.getAllFunctions())
	
	return profile
	
def ProfileToLines(profile):
	"""!
	Convert a profile dictionary to a list of formatted lines

	@param profile: dictionary of the profile
	@return list of CodeLines
	"""
	
	lines = [CodeLine('## Profile')]
	
	for k in profile.keys():
		lines.append(CodeLine('\t* {}: {}'.format(k, profile[k])))
		
	return lines
	
	
	
	
	
	
	
	
	
	
