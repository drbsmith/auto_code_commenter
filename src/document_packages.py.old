


import sys, os

from util.log import setup_logging
## logger : TODO_DOC
logger = setup_logging()

## go through sub folders as well?
RECURSIVE = True

def DoInitCheckAndFill(path):
	"""!
	# Do Init Check And Fill
	
	TODO_DOC
	
	@param path: TODO_DOC
	@return TODO_DOC
	
	## Profile
	* line count: 19
	* characters: 434
	* imports: init_file_creator
	* calls: DoInitCheckAndFill, CreateInitFile, os.path.join, os.listdir, list, filter, DoInitCheckAndFill
	"""
	
	if not path[-1] == '/':
		path += '/'
		
		
	from init_file_creator import CreateInitFile
	# testing for leading double underscores. These are 'invisible' to us
	if not '__' in path:
		CreateInitFile(path)
		
	# get files at path
	children= [os.path.join(path, child) for child in os.listdir(path)]
	directories= list(filter(os.path.isdir, children))
	
	if RECURSIVE:
		for direct in directories:
			DoInitCheckAndFill(direct)
			
			
def main():
	"""!
	# Main
	
	TODO_DOC
	
	@param : TODO_DOC
	@return TODO_DOC
	
	## Profile
	* line count: 8
	* characters: 180
	* calls: main, logger.info, DoInitCheckAndFill
	"""
	
	path = sys.argv[1]
	
	logger.info("commencing __init__.py building for directory tree at {}. Ignoring any paths with '__' in the directory name.")
	
	DoInitCheckAndFill(path)
	
	
if __name__ == "__main__":
	if len(sys.argv) < 2:
		logger.error('missing required path to directory argument')
		exit()
		
	main()
